name: One control plane, one worker - worker

on:
  workflow_dispatch:
    inputs:
      join_command:
        required: true
        type: string
        description: 'The join command to join the worker node to the control plane'

jobs:
  one-cp-one-worker-worker:
    runs-on: ubuntu-latest
    steps:
      - name: Get kubectl version
        run: |
          KUBECTL_VERSION=$(kubectl version --client --output=json | jq -r '.clientVersion.gitVersion' | sed 's/^v//')
          echo "KUBECTL_VERSION=$KUBECTL_VERSION" >> $GITHUB_ENV
          echo "KUBECTL_MINOR_VERSION=$(echo $KUBECTL_VERSION | cut -d. -f1,2)" >> $GITHUB_ENV

      - name: System prerequisites
        run: |
          sudo swapoff -a
          sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

          sudo mkdir -p /etc/modules-load.d
          echo overlay | sudo tee /etc/modules-load.d/k8s.conf
          echo br_netfilter | sudo tee -a /etc/modules-load.d/k8s.conf
          sudo modprobe overlay
          sudo modprobe br_netfilter

      - name: Configure system settings
        run: |
          sudo tee /etc/sysctl.d/kubernetes.conf<<EOF
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          EOF
          sudo sysctl --system

      - name: Add repository
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl gpg
          sudo mkdir -p -m 755 /etc/apt/keyrings
          curl -fsSL https://pkgs.k8s.io/core:/stable:/v$KUBECTL_MINOR_VERSION/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring-$KUBECTL_MINOR_VERSION.gpg
          echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring-$KUBECTL_MINOR_VERSION.gpg] https://pkgs.k8s.io/core:/stable:/v$KUBECTL_MINOR_VERSION/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

      - name: Install and configure containerd
        run: |
          sudo apt-get update
          sudo apt-get install -y containerd
          sudo mkdir -p /etc/containerd
          containerd config default | sudo tee /etc/containerd/config.toml
          sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
          sudo systemctl restart containerd

      - name: Join cluster
        run: sudo ${{ inputs.join_command }}

      - name: Keep alive
        run: |
          sleep 300 # 5 minutes
